toplevelexpr ::= expression

expression ::= unary binoprhs

binoprhs ::= ('+' unary)*

unary ::= primary
| '-' unary

primary ::= identifierexpr
| numberexpr
| parenexpr

parenexpr ::= '(' expression ')'

numberexpr ::= number

identifierexpr ::= identifier
| identifier '(' expression* ')'

external ::= 'extern' prototype

definition ::= 'def' prototype expression

prototype ::= id '(' id* ')'

